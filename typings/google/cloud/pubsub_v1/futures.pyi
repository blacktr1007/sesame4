"""
This type stub file was generated by pyright.
"""

import concurrent.futures
import google.api_core.future
from typing import Any, NoReturn, Optional

class Future(concurrent.futures.Future, google.api_core.future.Future):
    """Encapsulation of the asynchronous execution of an action.

    This object is returned from asychronous Pub/Sub calls, and is the
    interface to determine the status of those calls.

    This object should not be created directly, but is returned by other
    methods in this library.
    """
    def running(self) -> bool:
        """Return ``True`` if the associated Pub/Sub action has not yet completed."""
        ...
    
    def set_running_or_notify_cancel(self) -> NoReturn:
        ...
    
    def set_result(self, result: Any): # -> None:
        """Set the return value of work associated with the future.

        Do not use this method, it should only be used internally by the library and its
        unit tests.
        """
        ...
    
    def set_exception(self, exception: Optional[BaseException]): # -> None:
        """Set the result of the future as being the given exception.

        Do not use this method, it should only be used internally by the library and its
        unit tests.
        """
        ...
    


